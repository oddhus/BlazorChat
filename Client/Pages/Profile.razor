@page "/profile"
@using BlazorChat.ViewModels
@inject IProfileViewModel _profileViewModel
@inject NavigationManager NavigationManager

<h1>Hello, world!</h1>

<p>Welcome to your new app.</p>

@if (_profileViewModel.LoadingGet)
{
  <Spin />
}

<Space Direction="vertical" Style="width: 100%;">
  <SpaceItem>
    <Row Gutter="16">
      <Col Xs="24" Sm="16" Md="12" Lg="8">
      <Input @bind-Value="_profileViewModel.Firstname" Placeholder="Firstname" />
      </Col>
    </Row>
  </SpaceItem>
  <SpaceItem>
    <Row Gutter="16">
      <Col Xs="24" Sm="16" Md="12" Lg="8">
      <Input @bind-Value="_profileViewModel.Lastname" Placeholder="Lastname" />
      </Col>
    </Row>
  </SpaceItem>
  <SpaceItem>
    <Row Gutter="16">
      <Col Xs="24" Sm="16" Md="12" Lg="8">
      <Input @bind-Value="_profileViewModel.Address" Placeholder="Address" />
      </Col>
    </Row>
  </SpaceItem>
  <SpaceItem>
    @if (_profileViewModel.Failed)
    {
      <SpaceItem><Text Type="danger">Error: @_profileViewModel.ErrorMessage</Text></SpaceItem>
    }
  </SpaceItem>
  <Space>
    <SpaceItem>
      <Button Type="primary" @onclick="_profileViewModel.UpdateProfile" Loading="_profileViewModel.LoadingUpdate">Update
        user</Button>
    </SpaceItem>
    <SpaceItem>
      <Button Type="primary" @onclick="_profileViewModel.GetProfile" Loading="_profileViewModel.LoadingGet">Get
        user</Button>
    </SpaceItem>
  </Space>
</Space>

@code {
  [CascadingParameter]
  private Task<AuthenticationState> authenticationStateTask { get; set; }

  protected override async Task OnInitializedAsync()
  {
    var authState = await authenticationStateTask;
    var user = authState.User;

    if (user.Identity.IsAuthenticated)
    {
      var userId = user.FindFirst(c => c.Type == "UserId")?.Value;
      _profileViewModel.Id = userId;
      await _profileViewModel.GetProfile();
    }
    else
    {
      NavigationManager.NavigateTo("/");
    }
  }
}